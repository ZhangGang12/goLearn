go test -bench=.
```
goos: darwin
goarch: arm64
pkg: chapter1
BenchmarkEchoV3-8       31692483                37.11 ns/op
BenchmarkEchoV4-8       1000000000               0.2711 ns/op
PASS
ok      chapter1        2.842s
```
说明：
EchoV3 执行了 31692483 次，每次花费37.11 ns
EchoV3 执行了 1000000000 次，每次花费0.2711 ns

go map 是无须的，现在很多语言的map都是无需的，能有效防止有序的hash碰撞攻击
比如：
一个 Web 应用程序使用哈希表（如 Go 的 map 或 Python 的 dict）来存储用户提交的表单数据。
表单字段的键作为哈希表的键，表单内容作为值。
哈希表通过哈希函数将键映射到特定位置。
漏洞利用：攻击者通过构造一组特殊的键，这些键在特定哈希函数下会映射到相同的位置，导致严重的哈希碰撞。